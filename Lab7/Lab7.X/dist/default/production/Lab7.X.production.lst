

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 21 18:05:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text11,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0005                     _PORTA	set	5
   175  0008                     _PORTD	set	8
   176  002B                     _RA3	set	43
   177  002A                     _RA2	set	42
   178  0029                     _RA1	set	41
   179  0085                     _TRISA	set	133
   180  009F                     _ADCON1	set	159
   181  0088                     _TRISD	set	136
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  07FC                     start_initialization:	
   187  07FC                     __initialization:	
   188  07FC                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  07FC                     __end_of__initialization:	
   192  07FC  0183               	clrf	3
   193  07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:	
   197  0070                     ?_Initialise:	
   198  0070                     ??_Initialise:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_delay:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ??_delay:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_WriteCommand:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_ClearDisplay:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_ShiftCursor:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_MoveCursorToStart:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_SetDdramAddress:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_WriteCharacter:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     delay@i:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233  0070                     	ds	2
   234  0072                     ??_WriteCommand:	
   235  0072                     ??_WriteCharacter:	
   236                           ; 1 bytes @ 0x2
   237                           
   238  0072                     WriteCommand@cmd:	
   239                           ; 1 bytes @ 0x2
   240                           
   241  0072                     WriteCharacter@c:	
   242                           ; 1 bytes @ 0x2
   243                           
   244                           
   245                           ; 1 bytes @ 0x2
   246  0072                     	ds	1
   247  0073                     ?_SetDisplayMode:	
   248  0073                     ?_SetDisplayResolution:	
   249                           ; 1 bytes @ 0x3
   250                           
   251  0073                     ??_ClearDisplay:	
   252                           ; 1 bytes @ 0x3
   253                           
   254  0073                     ??_ShiftCursor:	
   255                           ; 1 bytes @ 0x3
   256                           
   257  0073                     ??_MoveCursorToStart:	
   258                           ; 1 bytes @ 0x3
   259                           
   260  0073                     ??_SetDdramAddress:	
   261                           ; 1 bytes @ 0x3
   262                           
   263  0073                     SetDisplayMode@cursorOn:	
   264                           ; 1 bytes @ 0x3
   265                           
   266  0073                     SetDisplayResolution@displayLargeFont:	
   267                           ; 1 bytes @ 0x3
   268                           
   269  0073                     SetDdramAddress@addr:	
   270                           ; 1 bytes @ 0x3
   271                           
   272                           
   273                           ; 1 bytes @ 0x3
   274  0073                     	ds	1
   275  0074                     ??_SetDisplayResolution:	
   276  0074                     ?_SetCursorPosition:	
   277                           ; 1 bytes @ 0x4
   278                           
   279  0074                     SetDisplayMode@cursorBlink:	
   280                           ; 1 bytes @ 0x4
   281                           
   282  0074                     ShiftCursor@right:	
   283                           ; 1 bytes @ 0x4
   284                           
   285  0074                     SetCursorPosition@pos:	
   286                           ; 1 bytes @ 0x4
   287                           
   288                           
   289                           ; 1 bytes @ 0x4
   290  0074                     	ds	1
   291  0075                     ??_SetDisplayMode:	
   292  0075                     ??_SetCursorPosition:	
   293                           ; 1 bytes @ 0x5
   294                           
   295                           
   296                           ; 1 bytes @ 0x5
   297  0075                     	ds	1
   298  0076                     SetDisplayResolution@displayTwoLines:	
   299  0076                     SetCursorPosition@secondLine:	
   300                           ; 1 bytes @ 0x6
   301                           
   302                           
   303                           ; 1 bytes @ 0x6
   304  0076                     	ds	1
   305  0077                     SetDisplayMode@displayOn:	
   306                           
   307                           ; 1 bytes @ 0x7
   308  0077                     	ds	1
   309  0078                     ??_main:	
   310                           
   311                           	psect	maintext
   312  07B4                     __pmaintext:	
   313                           ; 1 bytes @ 0x8
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 152 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels required when called:    4
   339 ;; This function calls:
   340 ;;		_ClearDisplay
   341 ;;		_Initialise
   342 ;;		_SetCursorPosition
   343 ;;		_SetDisplayMode
   344 ;;		_SetDisplayResolution
   345 ;;		_ShiftCursor
   346 ;;		_WriteCharacter
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  07B4                     _main:	
   355  07B4                     l810:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   358                           
   359                           
   360                           ;main.c: 154:     Initialise();
   361  07B4  120A  118A  2704  120A  118A  	fcall	_Initialise
   362  07B9                     l812:	
   363                           
   364                           ;main.c: 156:     SetDisplayMode(1, 1, 1);
   365  07B9  01F3               	clrf	SetDisplayMode@cursorOn
   366  07BA  0AF3               	incf	SetDisplayMode@cursorOn,f
   367  07BB  01F4               	clrf	SetDisplayMode@cursorBlink
   368  07BC  0AF4               	incf	SetDisplayMode@cursorBlink,f
   369  07BD  3001               	movlw	1
   370  07BE  120A  118A  2778  120A  118A  	fcall	_SetDisplayMode
   371  07C3                     l814:	
   372                           
   373                           ;main.c: 157:     ClearDisplay();
   374  07C3  120A  118A  26ED  120A  118A  	fcall	_ClearDisplay
   375  07C8                     l816:	
   376                           
   377                           ;main.c: 158:     SetDisplayResolution(1, 0);
   378  07C8  01F3               	clrf	SetDisplayResolution@displayLargeFont
   379  07C9  3001               	movlw	1
   380  07CA  120A  118A  275D  120A  118A  	fcall	_SetDisplayResolution
   381  07CF                     l818:	
   382                           
   383                           ;main.c: 159:     WriteCharacter('a');
   384  07CF  3061               	movlw	97
   385  07D0  120A  118A  270F  120A  118A  	fcall	_WriteCharacter
   386  07D5                     l820:	
   387                           
   388                           ;main.c: 160:     WriteCharacter('b');
   389  07D5  3062               	movlw	98
   390  07D6  120A  118A  270F  120A  118A  	fcall	_WriteCharacter
   391  07DB                     l822:	
   392                           
   393                           ;main.c: 161:     ShiftCursor(1);
   394  07DB  3001               	movlw	1
   395  07DC  120A  118A  2720  120A  118A  	fcall	_ShiftCursor
   396  07E1                     l824:	
   397                           
   398                           ;main.c: 162:     WriteCharacter('c');
   399  07E1  3063               	movlw	99
   400  07E2  120A  118A  270F  120A  118A  	fcall	_WriteCharacter
   401  07E7                     l826:	
   402                           
   403                           ;main.c: 163:     SetCursorPosition(1, 0);
   404  07E7  01F4               	clrf	SetCursorPosition@pos
   405  07E8  3001               	movlw	1
   406  07E9  120A  118A  2794  120A  118A  	fcall	_SetCursorPosition
   407  07EE                     l828:	
   408                           
   409                           ;main.c: 165:     {;main.c: 166:         SetDisplayMode(1, 1, 1);
   410  07EE  01F3               	clrf	SetDisplayMode@cursorOn
   411  07EF  0AF3               	incf	SetDisplayMode@cursorOn,f
   412  07F0  01F4               	clrf	SetDisplayMode@cursorBlink
   413  07F1  0AF4               	incf	SetDisplayMode@cursorBlink,f
   414  07F2  3001               	movlw	1
   415  07F3  120A  118A  2778  120A  118A  	fcall	_SetDisplayMode
   416  07F8  2FEE               	goto	l828
   417  07F9  120A  118A  2800   	ljmp	start
   418  07FC                     __end_of_main:	
   419                           
   420                           	psect	text1
   421  070F                     __ptext1:	
   422 ;; *************** function _WriteCharacter *****************
   423 ;; Defined at:
   424 ;;		line 141 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  c               1    wreg     unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  c               1    2[COMMON] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         1       0       0       0       0
   442 ;;Total ram usage:        1 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    1
   445 ;; This function calls:
   446 ;;		_delay
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _WriteCharacter
   454  070F                     _WriteCharacter:	
   455                           
   456                           ;incstack = 0
   457                           ; Regs used in _WriteCharacter: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   458                           ;WriteCharacter@c stored from wreg
   459  070F  00F2               	movwf	WriteCharacter@c
   460  0710                     l740:	
   461                           
   462                           ;main.c: 141: __attribute__((inline)) void WriteCharacter(char c);main.c: 142: {;main.c:
      +                           143:     RA1 = 1;
   463  0710  1283               	bcf	3,5	;RP0=0, select bank0
   464  0711  1303               	bcf	3,6	;RP1=0, select bank0
   465  0712  1485               	bsf	5,1	;volatile
   466                           
   467                           ;main.c: 144:     RA2 = 0;
   468  0713  1105               	bcf	5,2	;volatile
   469  0714                     l742:	
   470                           
   471                           ;main.c: 145:     PORTD = c;
   472  0714  0872               	movf	WriteCharacter@c,w
   473  0715  0088               	movwf	8	;volatile
   474  0716                     l744:	
   475                           
   476                           ;main.c: 146:     RA3 = 0;
   477  0716  1185               	bcf	5,3	;volatile
   478  0717                     l746:	
   479                           
   480                           ;main.c: 147:     delay();
   481  0717  120A  118A  2747  120A  118A  	fcall	_delay
   482  071C                     l748:	
   483                           
   484                           ;main.c: 148:     RA3 = 1;
   485  071C  1283               	bcf	3,5	;RP0=0, select bank0
   486  071D  1303               	bcf	3,6	;RP1=0, select bank0
   487  071E  1585               	bsf	5,3	;volatile
   488  071F                     l87:	
   489  071F  0008               	return
   490  0720                     __end_of_WriteCharacter:	
   491                           
   492                           	psect	text2
   493  0720                     __ptext2:	
   494 ;; *************** function _ShiftCursor *****************
   495 ;; Defined at:
   496 ;;		line 109 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  right           1    wreg     unsigned char 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  right           1    4[COMMON] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         1       0       0       0       0
   512 ;;      Temps:          1       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    2
   517 ;; This function calls:
   518 ;;		_WriteCommand
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _ShiftCursor
   526  0720                     _ShiftCursor:	
   527                           
   528                           ;incstack = 0
   529                           ; Regs used in _ShiftCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   530                           ;ShiftCursor@right stored from wreg
   531  0720  00F4               	movwf	ShiftCursor@right
   532  0721                     l726:	
   533                           
   534                           ;main.c: 109: void ShiftCursor(bool right);main.c: 110: {;main.c: 111:     WriteCommand(
      +                          0b00010000 | right << 2);
   535  0721  0874               	movf	ShiftCursor@right,w
   536  0722  00F3               	movwf	??_ShiftCursor
   537  0723  3001               	movlw	1
   538  0724                     u65:	
   539  0724  1003               	clrc
   540  0725  0DF3               	rlf	??_ShiftCursor,f
   541  0726  3EFF               	addlw	-1
   542  0727  1D03               	skipz
   543  0728  2F24               	goto	u65
   544  0729  1003               	clrc
   545  072A  0D73               	rlf	??_ShiftCursor,w
   546  072B  3810               	iorlw	16
   547  072C  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   548  0731                     l70:	
   549  0731  0008               	return
   550  0732                     __end_of_ShiftCursor:	
   551                           
   552                           	psect	text3
   553  075D                     __ptext3:	
   554 ;; *************** function _SetDisplayResolution *****************
   555 ;; Defined at:
   556 ;;		line 99 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  displayTwoLi    1    wreg     unsigned char 
   559 ;;  displayLarge    1    3[COMMON] unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  displayTwoLi    1    6[COMMON] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         1       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0
   574 ;;      Totals:         4       0       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		_WriteCommand
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _SetDisplayResolution
   587  075D                     _SetDisplayResolution:	
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _SetDisplayResolution: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   591                           ;SetDisplayResolution@displayTwoLines stored from wreg
   592  075D  00F6               	movwf	SetDisplayResolution@displayTwoLines
   593  075E                     l796:	
   594                           
   595                           ;main.c: 99: __attribute__((inline)) void SetDisplayResolution(bool displayTwoLines, boo
      +                          l displayLargeFont);main.c: 100: {;main.c: 101:     WriteCommand(0b00110000 | displayTwo
      +                          Lines << 3 | displayLargeFont << 2);
   596  075E  0873               	movf	SetDisplayResolution@displayLargeFont,w
   597  075F  00F4               	movwf	??_SetDisplayResolution
   598  0760  3002               	movlw	2
   599  0761                     u135:	
   600  0761  1003               	clrc
   601  0762  0DF4               	rlf	??_SetDisplayResolution,f
   602  0763  3EFF               	addlw	-1
   603  0764  1D03               	skipz
   604  0765  2F61               	goto	u135
   605  0766  0876               	movf	SetDisplayResolution@displayTwoLines,w
   606  0767  00F5               	movwf	??_SetDisplayResolution+1
   607  0768  3002               	movlw	2
   608  0769                     u145:	
   609  0769  1003               	clrc
   610  076A  0DF5               	rlf	??_SetDisplayResolution+1,f
   611  076B  3EFF               	addlw	-1
   612  076C  1D03               	skipz
   613  076D  2F69               	goto	u145
   614  076E  1003               	clrc
   615  076F  0D75               	rlf	??_SetDisplayResolution+1,w
   616  0770  0474               	iorwf	??_SetDisplayResolution,w
   617  0771  3830               	iorlw	48
   618  0772  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   619  0777                     l64:	
   620  0777  0008               	return
   621  0778                     __end_of_SetDisplayResolution:	
   622                           
   623                           	psect	text4
   624  0778                     __ptext4:	
   625 ;; *************** function _SetDisplayMode *****************
   626 ;; Defined at:
   627 ;;		line 93 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  displayOn       1    wreg     unsigned char 
   630 ;;  cursorOn        1    3[COMMON] unsigned char 
   631 ;;  cursorBlink     1    4[COMMON] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  displayOn       1    7[COMMON] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         2       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0
   645 ;;      Temps:          2       0       0       0       0
   646 ;;      Totals:         5       0       0       0       0
   647 ;;Total ram usage:        5 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		_WriteCommand
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _SetDisplayMode
   659  0778                     _SetDisplayMode:	
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _SetDisplayMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   663                           ;SetDisplayMode@displayOn stored from wreg
   664  0778  00F7               	movwf	SetDisplayMode@displayOn
   665  0779                     l794:	
   666                           
   667                           ;main.c: 93: __attribute__((inline)) void SetDisplayMode(bool displayOn, bool cursorOn, 
      +                          bool cursorBlink);main.c: 94: {;main.c: 95:     WriteCommand(0b00001000 | displayOn << 2
      +                           | cursorOn << 1 | cursorBlink);
   668  0779  0873               	movf	SetDisplayMode@cursorOn,w
   669  077A  00F5               	movwf	??_SetDisplayMode
   670  077B  3001               	movlw	1
   671  077C                     u115:	
   672  077C  1003               	clrc
   673  077D  0DF5               	rlf	??_SetDisplayMode,f
   674  077E  3EFF               	addlw	-1
   675  077F  1D03               	skipz
   676  0780  2F7C               	goto	u115
   677  0781  0877               	movf	SetDisplayMode@displayOn,w
   678  0782  00F6               	movwf	??_SetDisplayMode+1
   679  0783  3001               	movlw	1
   680  0784                     u125:	
   681  0784  1003               	clrc
   682  0785  0DF6               	rlf	??_SetDisplayMode+1,f
   683  0786  3EFF               	addlw	-1
   684  0787  1D03               	skipz
   685  0788  2F84               	goto	u125
   686  0789  1003               	clrc
   687  078A  0D76               	rlf	??_SetDisplayMode+1,w
   688  078B  0475               	iorwf	??_SetDisplayMode,w
   689  078C  0474               	iorwf	SetDisplayMode@cursorBlink,w
   690  078D  3808               	iorlw	8
   691  078E  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   692  0793                     l61:	
   693  0793  0008               	return
   694  0794                     __end_of_SetDisplayMode:	
   695                           
   696                           	psect	text5
   697  0794                     __ptext5:	
   698 ;; *************** function _SetCursorPosition *****************
   699 ;; Defined at:
   700 ;;		line 129 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  secondLine      1    wreg     unsigned char 
   703 ;;  pos             1    4[COMMON] unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  secondLine      1    6[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         1       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          1       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    3
   722 ;; This function calls:
   723 ;;		_MoveCursorToStart
   724 ;;		_SetDdramAddress
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _SetCursorPosition
   732  0794                     _SetCursorPosition:	
   733                           
   734                           ;incstack = 0
   735                           ; Regs used in _SetCursorPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   736                           ;SetCursorPosition@secondLine stored from wreg
   737  0794  00F6               	movwf	SetCursorPosition@secondLine
   738  0795                     l798:	
   739                           
   740                           ;main.c: 129: __attribute__((inline)) void SetCursorPosition(bool secondLine, uchar pos)
      +                          ;main.c: 130: {;main.c: 131:     MoveCursorToStart();
   741  0795  120A  118A  26F4  120A  118A  	fcall	_MoveCursorToStart
   742  079A                     l800:	
   743                           
   744                           ;main.c: 132:     if (pos > 39)
   745  079A  3028               	movlw	40
   746  079B  0274               	subwf	SetCursorPosition@pos,w
   747  079C  1C03               	skipc
   748  079D  2F9F               	goto	u151
   749  079E  2FA0               	goto	u150
   750  079F                     u151:	
   751  079F  2FA4               	goto	l804
   752  07A0                     u150:	
   753  07A0                     l802:	
   754                           
   755                           ;main.c: 133:         pos = 39;
   756  07A0  3027               	movlw	39
   757  07A1  00F5               	movwf	??_SetCursorPosition
   758  07A2  0875               	movf	??_SetCursorPosition,w
   759  07A3  00F4               	movwf	SetCursorPosition@pos
   760  07A4                     l804:	
   761                           
   762                           ;main.c: 135:     if (secondLine)
   763  07A4  0876               	movf	SetCursorPosition@secondLine,w
   764  07A5  1903               	btfsc	3,2
   765  07A6  2FA8               	goto	u161
   766  07A7  2FA9               	goto	u160
   767  07A8                     u161:	
   768  07A8  2FAD               	goto	l808
   769  07A9                     u160:	
   770  07A9                     l806:	
   771                           
   772                           ;main.c: 136:         pos += 40;
   773  07A9  3028               	movlw	40
   774  07AA  00F5               	movwf	??_SetCursorPosition
   775  07AB  0875               	movf	??_SetCursorPosition,w
   776  07AC  07F4               	addwf	SetCursorPosition@pos,f
   777  07AD                     l808:	
   778                           
   779                           ;main.c: 138:     SetDdramAddress(pos);
   780  07AD  0874               	movf	SetCursorPosition@pos,w
   781  07AE  120A  118A  26FB  120A  118A  	fcall	_SetDdramAddress
   782  07B3                     l84:	
   783  07B3  0008               	return
   784  07B4                     __end_of_SetCursorPosition:	
   785                           
   786                           	psect	text6
   787  06FB                     __ptext6:	
   788 ;; *************** function _SetDdramAddress *****************
   789 ;; Defined at:
   790 ;;		line 124 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  addr            1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  addr            1    3[COMMON] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         1       0       0       0       0
   808 ;;Total ram usage:        1 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    2
   811 ;; This function calls:
   812 ;;		_WriteCommand
   813 ;; This function is called by:
   814 ;;		_SetCursorPosition
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _SetDdramAddress
   820  06FB                     _SetDdramAddress:	
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _SetDdramAddress: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   824                           ;SetDdramAddress@addr stored from wreg
   825  06FB  00F3               	movwf	SetDdramAddress@addr
   826  06FC                     l718:	
   827                           
   828                           ;main.c: 124: void SetDdramAddress(uchar addr);main.c: 125: {;main.c: 126:     WriteComm
      +                          and(0b10000000 | addr);
   829  06FC  0873               	movf	SetDdramAddress@addr,w
   830  06FD  3880               	iorlw	128
   831  06FE  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   832  0703                     l79:	
   833  0703  0008               	return
   834  0704                     __end_of_SetDdramAddress:	
   835                           
   836                           	psect	text7
   837  06F4                     __ptext7:	
   838 ;; *************** function _MoveCursorToStart *****************
   839 ;; Defined at:
   840 ;;		line 119 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    2
   861 ;; This function calls:
   862 ;;		_WriteCommand
   863 ;; This function is called by:
   864 ;;		_SetCursorPosition
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _MoveCursorToStart
   870  06F4                     _MoveCursorToStart:	
   871  06F4                     l716:	
   872                           ;incstack = 0
   873                           ; Regs used in _MoveCursorToStart: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   874                           
   875                           
   876                           ;main.c: 121:     WriteCommand(0x02);
   877  06F4  3002               	movlw	2
   878  06F5  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   879  06FA                     l76:	
   880  06FA  0008               	return
   881  06FB                     __end_of_MoveCursorToStart:	
   882                           
   883                           	psect	text8
   884  0704                     __ptext8:	
   885 ;; *************** function _Initialise *****************
   886 ;; Defined at:
   887 ;;		line 172 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _Initialise
   916  0704                     _Initialise:	
   917  0704                     l750:	
   918                           ;incstack = 0
   919                           ; Regs used in _Initialise: [wreg+status,2]
   920                           
   921                           
   922                           ;main.c: 175:     ADCON1 = 0x07;
   923  0704  3007               	movlw	7
   924  0705  1683               	bsf	3,5	;RP0=1, select bank1
   925  0706  1303               	bcf	3,6	;RP1=0, select bank1
   926  0707  009F               	movwf	31	;volatile
   927  0708                     l752:	
   928                           
   929                           ;main.c: 176:     TRISA = 0b00000000;
   930  0708  0185               	clrf	5	;volatile
   931  0709                     l754:	
   932                           
   933                           ;main.c: 177:     TRISD = 0b00000000;
   934  0709  0188               	clrf	8	;volatile
   935  070A                     l756:	
   936                           
   937                           ;main.c: 178:     PORTA = 0x00;
   938  070A  1283               	bcf	3,5	;RP0=0, select bank0
   939  070B  1303               	bcf	3,6	;RP1=0, select bank0
   940  070C  0185               	clrf	5	;volatile
   941  070D                     l758:	
   942                           
   943                           ;main.c: 179:     PORTD = 0x00;
   944  070D  0188               	clrf	8	;volatile
   945  070E                     l98:	
   946  070E  0008               	return
   947  070F                     __end_of_Initialise:	
   948                           
   949                           	psect	text9
   950  06ED                     __ptext9:	
   951 ;; *************** function _ClearDisplay *****************
   952 ;; Defined at:
   953 ;;		line 104 in file "main.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    2
   974 ;; This function calls:
   975 ;;		_WriteCommand
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _ClearDisplay
   983  06ED                     _ClearDisplay:	
   984  06ED                     l724:	
   985                           ;incstack = 0
   986                           ; Regs used in _ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   987                           
   988                           
   989                           ;main.c: 106:     WriteCommand(0x1);
   990  06ED  3001               	movlw	1
   991  06EE  120A  118A  2732  120A  118A  	fcall	_WriteCommand
   992  06F3                     l67:	
   993  06F3  0008               	return
   994  06F4                     __end_of_ClearDisplay:	
   995                           
   996                           	psect	text10
   997  0732                     __ptext10:	
   998 ;; *************** function _WriteCommand *****************
   999 ;; Defined at:
  1000 ;;		line 82 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  cmd             1    wreg     unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  cmd             1    2[COMMON] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         1       0       0       0       0
  1018 ;;Total ram usage:        1 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    1
  1021 ;; This function calls:
  1022 ;;		_delay
  1023 ;; This function is called by:
  1024 ;;		_SetDisplayMode
  1025 ;;		_SetDisplayResolution
  1026 ;;		_ClearDisplay
  1027 ;;		_ShiftCursor
  1028 ;;		_MoveCursorToStart
  1029 ;;		_SetDdramAddress
  1030 ;;		_ShiftDisplay
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _WriteCommand
  1036  0732                     _WriteCommand:	
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in _WriteCommand: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1040                           ;WriteCommand@cmd stored from wreg
  1041  0732  00F2               	movwf	WriteCommand@cmd
  1042  0733                     l700:	
  1043                           
  1044                           ;main.c: 82: __attribute__((inline)) void WriteCommand(uchar cmd);main.c: 83: {;main.c: 
      +                          84:     TRISD = 0x00;
  1045  0733  1683               	bsf	3,5	;RP0=1, select bank1
  1046  0734  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0735  0188               	clrf	8	;volatile
  1048  0736                     l702:	
  1049                           
  1050                           ;main.c: 85:     RA1 = 0;
  1051  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0738  1085               	bcf	5,1	;volatile
  1054  0739                     l704:	
  1055                           
  1056                           ;main.c: 86:     RA2 = 0;
  1057  0739  1105               	bcf	5,2	;volatile
  1058  073A                     l706:	
  1059                           
  1060                           ;main.c: 87:     PORTD = cmd;
  1061  073A  0872               	movf	WriteCommand@cmd,w
  1062  073B  0088               	movwf	8	;volatile
  1063  073C                     l708:	
  1064                           
  1065                           ;main.c: 88:     RA3 = 0;
  1066  073C  1185               	bcf	5,3	;volatile
  1067  073D                     l710:	
  1068                           
  1069                           ;main.c: 89:     delay();
  1070  073D  120A  118A  2747  120A  118A  	fcall	_delay
  1071  0742                     l712:	
  1072                           
  1073                           ;main.c: 90:     RA3 = 1;
  1074  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0744  1585               	bsf	5,3	;volatile
  1077  0745                     l714:	
  1078                           
  1079                           ;main.c: 91:     PORTD = 0;
  1080  0745  0188               	clrf	8	;volatile
  1081  0746                     l58:	
  1082  0746  0008               	return
  1083  0747                     __end_of_WriteCommand:	
  1084                           
  1085                           	psect	text11
  1086  0747                     __ptext11:	
  1087 ;; *************** function _delay *****************
  1088 ;; Defined at:
  1089 ;;		line 80 in file "main.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  i               2    0[COMMON] int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, btemp+1
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         2       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         2       0       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_WriteCommand
  1113 ;;		_WriteCharacter
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _delay
  1119  0747                     _delay:	
  1120  0747                     l690:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1123                           
  1124  0747  01F0               	clrf	delay@i
  1125  0748  01F1               	clrf	delay@i+1
  1126  0749                     l696:	
  1127  0749  3001               	movlw	1
  1128  074A  07F0               	addwf	delay@i,f
  1129  074B  1803               	skipnc
  1130  074C  0AF1               	incf	delay@i+1,f
  1131  074D  3000               	movlw	0
  1132  074E  07F1               	addwf	delay@i+1,f
  1133  074F                     l698:	
  1134  074F  0871               	movf	delay@i+1,w
  1135  0750  3A80               	xorlw	128
  1136  0751  00FF               	movwf	btemp+1
  1137  0752  3093               	movlw	147
  1138  0753  027F               	subwf	btemp+1,w
  1139  0754  1D03               	skipz
  1140  0755  2F58               	goto	u15
  1141  0756  3088               	movlw	136
  1142  0757  0270               	subwf	delay@i,w
  1143  0758                     u15:	
  1144  0758  1C03               	skipc
  1145  0759  2F5B               	goto	u11
  1146  075A  2F5C               	goto	u10
  1147  075B                     u11:	
  1148  075B  2F49               	goto	l696
  1149  075C                     u10:	
  1150  075C                     l55:	
  1151  075C  0008               	return
  1152  075D                     __end_of_delay:	
  1153  007E                     btemp	set	126	;btemp
  1154  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SetDisplayMode
    _WriteCharacter->_delay
    _ShiftCursor->_WriteCommand
    _SetDisplayResolution->_WriteCommand
    _SetDisplayMode->_WriteCommand
    _SetCursorPosition->_SetDdramAddress
    _SetDdramAddress->_WriteCommand
    _MoveCursorToStart->_WriteCommand
    _ClearDisplay->_WriteCommand
    _WriteCommand->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     979
                       _ClearDisplay
                         _Initialise
                  _SetCursorPosition
                     _SetDisplayMode
               _SetDisplayResolution
                        _ShiftCursor
                     _WriteCharacter
 ---------------------------------------------------------------------------------
 (1) _WriteCharacter                                       1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _ShiftCursor                                          2     2      0      60
                                              3 COMMON     2     2      0
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _SetDisplayResolution                                 4     3      1     165
                                              3 COMMON     4     3      1
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _SetDisplayMode                                       5     3      2     415
                                              3 COMMON     5     3      2
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _SetCursorPosition                                    3     2      1     249
                                              4 COMMON     3     2      1
                  _MoveCursorToStart
                    _SetDdramAddress
 ---------------------------------------------------------------------------------
 (2) _SetDdramAddress                                      1     1      0      60
                                              3 COMMON     1     1      0
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (2) _MoveCursorToStart                                    0     0      0      45
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _Initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         0     0      0      45
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (2) _WriteCommand                                         1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDisplay
     _WriteCommand
       _delay
   _Initialise
   _SetCursorPosition
     _MoveCursorToStart
       _WriteCommand
         _delay
     _SetDdramAddress
       _WriteCommand
         _delay
   _SetDisplayMode
     _WriteCommand
       _delay
   _SetDisplayResolution
     _WriteCommand
       _delay
   _ShiftCursor
     _WriteCommand
       _delay
   _WriteCharacter
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 21 18:05:08 2019

                   ??_SetDdramAddress 0073                                    l61 0793  
                                  l70 0731                                    l55 075C  
                                  l64 0777                                    l58 0746  
                                  l67 06F3                                    l76 06FA  
                                  l84 07B3                                    l79 0703  
                                  l87 071F                                    l98 070E  
                                  u10 075C                                    u11 075B  
                                  u15 0758                                    u65 0724  
                                 l700 0733                                   l710 073D  
                                 l702 0736                                   l712 0742  
                                 l704 0739                                   l800 079A  
                                 l714 0745                                   l706 073A  
                                 l802 07A0                                   l810 07B4  
                                 l708 073C                                   l724 06ED  
                                 l716 06F4                                   l804 07A4  
                                 l740 0710                                   l820 07D5  
                                 l812 07B9                                   l750 0704  
                                 l718 06FC                                   l806 07A9  
                                 l726 0721                                   l742 0714  
                                 l822 07DB                                   l814 07C3  
                                 l752 0708                                   l808 07AD  
                                 l744 0716                                   l824 07E1  
                                 l816 07C8                                   l690 0747  
                                 l754 0709                                   l746 0717  
                                 l826 07E7                                   l818 07CF  
        __end_of_SetDisplayResolution 0778                                   l756 070A  
                                 l748 071C                                   l828 07EE  
                                 l758 070D                                   l696 0749  
                                 l698 074F                                   l794 0779  
                                 l796 075E                                   l798 0795  
                                 _RA1 0029                                   _RA2 002A  
                                 _RA3 002B                                   u115 077C  
                                 u125 0784                                   u150 07A0  
                                 u151 079F                                   u135 0761  
                                 u160 07A9                                   u161 07A8  
                                 u145 0769                          __CFG_FOSC$HS 0000  
               __size_of_WriteCommand 0015                          __CFG_LVP$OFF 0000  
                                _main 07B4                                  btemp 007E  
                                start 0000                                 ?_main 0070  
                        _WriteCommand 0732                         __CFG_WDTE$OFF 0000  
                               _PORTA 0005                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISD 0088  
                       __CFG_PWRTE$ON 0000                      ??_SetDisplayMode 0075  
                               _delay 0747                        __CFG_BOREN$OFF 0000  
                               status 0003                                 wtemp0 007E  
             __size_of_WriteCharacter 0011                       __initialization 07FC  
                        __end_of_main 07FC                            _Initialise 0704  
                              ??_main 0078                                ?_delay 0070  
                              _ADCON1 009F                 __size_of_ClearDisplay 0007  
                       ??_ShiftCursor 0073                  _SetDisplayResolution 075D  
                              delay@i 0070                          _ClearDisplay 06ED  
                     _SetDdramAddress 06FB               __end_of__initialization 07FC  
               ?_SetDisplayResolution 0073                   __end_of_ShiftCursor 0732  
                 SetDdramAddress@addr 0073                        __pcstackCOMMON 0070  
              SetDisplayMode@cursorOn 0073                         __end_of_delay 075D  
                         ?_Initialise 0070                               ??_delay 0070  
                      _WriteCharacter 070F                     _MoveCursorToStart 06F4  
                          __pmaintext 07B4                    ?_MoveCursorToStart 0070  
                 ??_MoveCursorToStart 0073               __end_of_SetDdramAddress 0704  
                     WriteCharacter@c 0072                           _ShiftCursor 0720  
              __end_of_WriteCharacter 0720                   __size_of_Initialise 000B  
              ??_SetDisplayResolution 0074             __end_of_MoveCursorToStart 06FB  
                             __ptext1 070F                               __ptext2 0720  
                             __ptext3 075D                               __ptext4 0778  
                             __ptext5 0794                               __ptext6 06FB  
                             __ptext7 06F4                               __ptext8 0704  
                             __ptext9 06ED                  end_of_initialization 07FC  
                     ?_WriteCharacter 0070                       WriteCommand@cmd 0072  
                    ?_SetDdramAddress 0070                      ShiftCursor@right 0074  
                   _SetCursorPosition 0794               SetDisplayMode@displayOn 0077  
                  ?_SetCursorPosition 0074               __size_of_SetDisplayMode 001C  
          __size_of_MoveCursorToStart 0007                   ??_SetCursorPosition 0075  
                        ??_Initialise 0070                   start_initialization 07FC  
           __end_of_SetCursorPosition 07B4                    __end_of_Initialise 070F  
                       ?_WriteCommand 0070                             ___latbits 0002  
                        ?_ShiftCursor 0070                        ??_WriteCommand 0072  
                    ??_WriteCharacter 0072                        __size_of_delay 0016  
          __size_of_SetCursorPosition 0020                        _SetDisplayMode 0778  
         SetCursorPosition@secondLine 0076         __size_of_SetDisplayResolution 001B  
                       ?_ClearDisplay 0070             SetDisplayMode@cursorBlink 0074  
              __end_of_SetDisplayMode 0794                  SetCursorPosition@pos 0074  
                      ??_ClearDisplay 0073  SetDisplayResolution@displayLargeFont 0073  
                            __ptext10 0732                              __ptext11 0747  
                     ?_SetDisplayMode 0073                  __end_of_WriteCommand 0747  
                       __size_of_main 0048              __size_of_SetDdramAddress 0009  
                __size_of_ShiftCursor 0012   SetDisplayResolution@displayTwoLines 0076  
                __end_of_ClearDisplay 06F4  
